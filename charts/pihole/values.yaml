## Default values for pihole.
## This is a YAML-formatted file.
## Declare variables to be passed into your templates.
## Using inheritance with the namespace-specific values files.
## Do not override these defaults if you do not know what you are doing! This may affect ALL deployments.

## @section Common parameters

## @param nameOverride String to partially override pihole.fullname
##
nameOverride: ""
## @param fullnameOverride String to fully override pihole.fullname
##
fullnameOverride: ""
## @param commonLabels Add labels to all the deployed resources
##
commonLabels: {}
## @param commonAnnotations Add annotations to all the deployed resources
##
commonAnnotations: {}

## @section pihole parameters

## pihole image version
## 
## @param image.registry pihole image registry
## @param image.repository astro clock image repository
## @param image.tag pihole image tag
## @param image.pullPolicy pihole image pull policy
## @param image.pullSecrets Specify docker-registry secret names as an array
##
image:
  registry: "pihole"
  repository: pihole
  ## Overrides the image tag whose default is the chart appVersion.
  tag: "2022.07.1"
  ## Specify an imagePullPolicy
  ## Defaults to 'Always' if tag is 'latest', else set to 'IfNotPresent'
  pullPolicy: IfNotPresent
  pullSecrets: []

## Command and args for running the container
## @param command Override default container command
## @param args Override default container args
##
command: []
args: []

## Environment variables for the pihole containers
## @param envVars environment variables
## Example:
## envVars:
##   - name: FOO
##     value: "bar"
##
envVars: 
  - name: TZ
    value: "Europe/Stockholm"
  - name: WEBPASSWORD
    value: redacted
  - name: FTLCONF_REPLY_ADDR4
    value: redacted

ports:
  - name: http-web
    containerPort: 80
    protocol: TCP
  - name: dns-tcp
    containerPort: 53
    protocol: TCP
  - name: dns-udp
    containerPort: 53
    protocol: UDP
  - name: dhcp-udp
    containerPort: 67
    protocol: UDP

## @section Exposure parameters

## Service configuration
## @param service.type Kubernetes service type
## @param service.port Service port
## @param service.targetPort Service target port
## @param service.externalTrafficPolicy Enable client source IP preservation
## @param service.annotations Annotations for pihole service
##
service:
  web:
    type: ClusterIP
    ports:
      - name: http-web
        port: 80
        targetPort: http-web
        protocol: TCP
    externalTrafficPolicy: Cluster
    sessionAffinity: None
    annotations: {}
  dns:
    type: NodePort
    ports:
      - name: dns-tcp
        port: 53
        targetPort: dns-tcp
        protocol: TCP
      - name: dns-udp
        port: 53
        targetPort: dns-udp
        protocol: UDP
      - name: dhcp-udp
        port: 67
        targetPort: dhcp-udp
        protocol: UDP
    externalTrafficPolicy: Cluster
    sessionAffinity: None
    annotations: {}


## Ingress configuration
##
##
##
ingress:
  enabled: true
  ingressClassName:
  spec:
    domain: rooterserver
    path: /admin
    pathType: Prefix
    service: pihole
    servicePort: 80
  
## @section pihole deployment/replicaset parameters

## @param replicaCount Number of pihole replicas to deploy
##
replicaCount: 1

## @param podLabels Labels for pihole pods
##
podLabels: {}

## @param podAnnotations Annotations for pihole pods
##
podAnnotations: {}

## @param extraVolumes Optionally specify extra list of additional volumes for pihole pods
##
extraVolumes: []

## @param extraVolumeMounts Optionally specify extra list of additional volumeMounts for pihole pods
##
extraVolumeMounts: []

## @param initContainers Add additional init containers to the pihole pods
## Example:
## initContainers:
##   - name: your-image-name
##     image: your-image
##     imagePullPolicy: always
##     ports:
##       - name: portname
##         containerPort: 1234
##
initContainers: []

## @param sidecars Add additional sidecar containers to the pihole pods
## Example:
## sidecars:
##   - name: your-image-name
##     image: your-image
##     imagePullPolicy: always
##     ports:
##       - name: portname
##         containerPort: 1234
##
sidecars: []

## pihole pods' SecurityContext
## @param podSecurityContext.enabled Enable pihole pods' Security Context
## @param podSecurityContext.fsGroup Set pihole pods' Security Context fsGroup
##
podSecurityContext: 
  enabled: false
  fsGroup: 2000

## pihole containers' SecurityContext
## @param containerSecurityContext.enabled Enable pihole containers' Security Context
## @param containerSecurityContext.readOnlyRootFilesystem Set pihole containers' readOnlyRootFilesystem
## @param containerSecurityContext.runAsNonRoot Set pihole containers' runAsNonRoot
## @param containerSecurityContext.runAsUser Set pihole containers' runAsUser
##
containerSecurityContext: 
  enabled: false
  readOnlyRootFilesystem: true
  runAsNonRoot: true
  runAsUser: 1000

## pihole resource requests and limits
## @param resources.enabled Enable pihole container resource configuration
## @param resources.limits The resources limits for the pihole container
## @param resources.requests The requested resources for the pihole container
resources: 
  enabled: false
  limits:
    cpu: 100m
    memory: 128Mi
  requests:
    cpu: 100m
    memory: 128Mi

## Configure options for startup probe
## @param startupProbe.enabled Enable startupProbe
## @param startupProbe.httpGet.path Request path for startupProbe
## @param startupProbe.httpGet.port Port for startupProbe
## @param startupProbe.initialDelaySeconds Initial delay seconds for startupProbe
## @param startupProbe.periodSeconds Period seconds for startupProbe
## @param startupProbe.timeoutSeconds Timeout seconds for startupProbe
## @param startupProbe.failureThreshold Failure threshold for startupProbe
## @param startupProbe.successThreshold Success threshold for startupProbe
##
startupProbe:
  enabled: false
  httpGet:
    path: /live
    port: health
  initialDelaySeconds: 30
  periodSeconds: 5
  timeoutSeconds: 1
  failureThreshold: 60
  successThreshold: 1

## Configure options for liveness probe
## @param livenessProbe.enabled Enable livenessProbe
## @param livenessProbe.httpGet.path Request path for livenessProbe
## @param livenessProbe.httpGet.port Port for livenessProbe
## @param livenessProbe.initialDelaySeconds Initial delay seconds for livenessProbe
## @param livenessProbe.periodSeconds Period seconds for livenessProbe
## @param livenessProbe.timeoutSeconds Timeout seconds for livenessProbe
## @param livenessProbe.failureThreshold Failure threshold for livenessProbe
## @param livenessProbe.successThreshold Success threshold for livenessProbe
##
livenessProbe:
  enabled: false
  httpGet:
    path: /live
    port: health
  initialDelaySeconds: 300
  periodSeconds: 5
  timeoutSeconds: 1
  failureThreshold: 3
  successThreshold: 1

## Configure options for readiness probe
## @param readinessProbe.enabled Enable readinessProbe
## @param readinessProbe.httpGet.path Request path for readinessProbe
## @param readinessProbe.httpGet.port Port for readinessProbe
## @param readinessProbe.initialDelaySeconds Initial delay seconds for readinessProbe
## @param readinessProbe.periodSeconds Period seconds for readinessProbe
## @param readinessProbe.timeoutSeconds Timeout seconds for readinessProbe
## @param readinessProbe.failureThreshold Failure threshold for readinessProbe
## @param readinessProbe.successThreshold Success threshold for readinessProbe
##
readinessProbe:
  enabled: false
  httpGet:
    path: /live
    port: health
  initialDelaySeconds: 30
  periodSeconds: 10
  timeoutSeconds: 1
  failureThreshold: 3
  successThreshold: 1

## Strategy to use to update pods
## @param updateStrategy.type StrategyType
## RollingUpdate or OnDelete
## 
updateStrategy:
  type: RollingUpdate

## @param affinity Affinity for pod assignment
##
affinity: {}

## @param nodeSelector Node labels for pod assignment
##
nodeSelector: {}

## @param tolerations Tolerations for pod assignment
##
tolerations: []

## Inject custom host aliases
## @param hostAliases.enabled enable custom host aliases injection
## @param hosts custom host aliases to inject
## Example:
## hostAliases:
##    enabled: true
##    hosts:
##      - ip: 123.123.123.123
##        hostnames:
##          - my.host.one
##          - my.host.two
##
hostAliases:
  enabled: false

## @section RBAC parameters

## Specifies wheter a ServiceAccount should be created
## @param serviceAccount.create Enable the creation of a ServiceAccount for pihole pods
## @param serviceAccount.name Name of the created ServiceAccount
## If not set and create is true, a name is generated using the fullname template
## @param serviceAccount.annotations Annotations to add to the service account
##
serviceAccount:
  create: true
  name: ""
  annotations: {}

## @section Persistence

## pihole persistence configuration
## @param persistence.enabled Enable pihole data persistence using PVC
## @param persistence.storageClass PVC storage class for pihole data volume
## @param persistence.selector Selector to match an existing Persistent Volume
## @param persistence.accessMode PVC Access Mode for pihole data volume
## @param persistence.size PVC Storage Request for pihole data volume
## @param persistence.annotations Persistence annotations, evaluated as a template
##
persistence:
  enabled: true
  storageClass: local-path
  selector: {}
  accessMode: ReadWriteOnce
  size: 1Gi
  annotations: {}

## @section Other parameters

## pihole Pod Disruption Budget configuration
## @param pdb.create Enable/disable a Pod Disruption Budget creation
## @param pdb.minAvailable Minimum number/percentage of pods that should remain scheduled
## @param pdb.maxUnavailable Maximum number/percentage of pods that may be unavailable
##
pdb:
  create: false
  minAvailable: 1
  maxUnavailable: ""

## pihole Autoscaling configuration
## @param autoscaling.enabled Enable autoscaling for pihole
## @param autoscaling.minReplicas Minimum number of pihole replicas
## @param autoscaling.maxReplicas Maximum number of pihole replicas
## @param autoscaling.targetCPUUtilizationPercentage Target CPU utilization percentage
## @param targetMemoryUtilizationPercentage Target memory utilization percentage
##
autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 11
  targetCPUUtilizationPercentage: 80
  targetMemoryUtilizationPercentage: 80

## pihole chaos monkey testing configuration
## @param chaos.enabled Enable pihole chaos monkey testing
## @param chaos.config.mtbf pihole chaos mtbf
## @param chaos.config.killMode pihole chaos kill mode
## @param chaos.config.killValue pihole chaos kill value
##
chaos:
  enabled: false
  config:
    mtbf: '2'
    killMode: "fixed"
    killValue: '1'
